/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;
import Controlador.Controlador_Sucursal;
import Controlador.Controlador_Medicion;
import Modelo.Cliente;
import Modelo.Medicion;
import Modelo.Sucursal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author porto
 */
public class PanelReporteIMCSucursal extends javax.swing.JPanel {
 private Controlador_Sucursal controladorSucursal;
    private Controlador_Medicion controladorMedicion;
    
    public PanelReporteIMCSucursal(Controlador_Sucursal controladorSucursal, Controlador_Medicion controladorMedicion) {
        initComponents();
                this.controladorSucursal = controladorSucursal;
        this.controladorMedicion = controladorMedicion;
        configurarTabla();
    }
private void configurarTabla() {
        String[] columnas = {"ID Cliente", "Nombre", "Sucursal", "Peso", "Estatura (m)", "IMC", "Clasificación IMC"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        jTable1.setModel(modelo);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBuscarSucu = new javax.swing.JButton();
        txtCodigoSucu = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jLabel1.setText("Reporte de IMC por sucursal");

        btnBuscarSucu.setText("Buscar");
        btnBuscarSucu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarSucuActionPerformed(evt);
            }
        });

        txtCodigoSucu.setText("Digite Codigo Sucursal");
        txtCodigoSucu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoSucuActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoSucu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarSucu)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBuscarSucu)
                    .addComponent(txtCodigoSucu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarSucuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarSucuActionPerformed
        // TODO add your handling code here:
        
//                try {
//            int codigo = Integer.parseInt(txtCodigoSucu.getText().trim());
//            Sucursal sucu = controladorSucursal.buscar(codigo);
//
//            if (sucu == null) {
//                JOptionPane.showMessageDialog(this, "Sucursal no encontrada");
//                return;
//            }
//
//            List<Cliente> clientes = controladorSucursal.listarClientesPorSucursal(codigo);
//
//            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
//            modelo.setRowCount(0); // limpiar tabla
//
//            for (Cliente c : clientes) {
//                // Traer todas las mediciones del cliente
//                List<Medicion> mediciones = controladorMedicion.listar();
//                Medicion ultima = null;
//
//                for (Medicion m : mediciones) {
//                    if (m.getCliente() != null && m.getCliente().getCedula() == c.getCedula()) {
//                        ultima = m; // suponemos la última que aparece
//                    }
//                }
//
//                if (ultima != null) {
//                    double peso = ultima.getPeso();
//                    double estatura = ultima.getEstatura();
//                    if (estatura > 3) estatura = estatura / 100.0; // asegurar en metros
//                    double imc = peso / (estatura * estatura);
//
//                    Object[] fila = {
//                        c.getCedula(),
//                        c.getNombre(),
//                        sucu.getProvincia(),
//                        peso,
//                        String.format("%.2f", estatura),
//                        String.format("%.2f", imc),
//                        clasificarIMC(imc)
//                    };
//                    modelo.addRow(fila);
//                }
//            }
//
//        } catch (NumberFormatException e) {
//            JOptionPane.showMessageDialog(this, "Ingrese un código válido");
//        }

   try {
        int codigo = Integer.parseInt(txtCodigoSucu.getText().trim());
        Sucursal sucu = controladorSucursal.buscar(codigo);

        if (sucu == null) {
            JOptionPane.showMessageDialog(this, "Sucursal no encontrada");
            return;
        }

        List<Cliente> clientes = controladorSucursal.listarClientesPorSucursal(codigo);

        if (clientes == null || clientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay clientes en esta sucursal");
            return;
        }

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0); // limpiar tabla

        List<Medicion> mediciones = controladorMedicion.listar();

        for (Cliente c : clientes) {
            Medicion ultima = null;

            for (Medicion m : mediciones) {
                if (m.getCliente() != null 
                        && String.valueOf(m.getCliente().getCedula())
                           .equals(String.valueOf(c.getCedula()))) {
                    ultima = m; // aquí podrías comparar fechas si tu clase Medicion las tiene
                }
            }

            if (ultima != null) {
                double peso = ultima.getPeso();
                double estatura = ultima.getEstatura();
                if (estatura > 3) estatura = estatura / 100.0; // pasar a metros si viene en cm
                double imc = peso / (estatura * estatura);

                Object[] fila = {
                    c.getCedula(),
                    c.getNombre(),
                    sucu.getProvincia(),
                    peso,
                    String.format("%.2f", estatura),
                    String.format("%.2f", imc),
                    clasificarIMC(imc)
                };
                modelo.addRow(fila);
            }
        }

        if (modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No se encontraron mediciones para los clientes de esta sucursal");
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ingrese un código válido");
    }
    }//GEN-LAST:event_btnBuscarSucuActionPerformed

        private String clasificarIMC(double imc) {
        if (imc <= 16.00) return "Delgadez severa";
        if (imc <= 17.00) return "Delgadez moderada";
        if (imc <= 18.50) return "Delgadez leve";
        if (imc <= 25.00) return "Normal";
        if (imc <= 30.00) return "Pre-obesidad";
        if (imc <= 35.00) return "Obesidad leve";
        if (imc <= 40.00) return "Obesidad media";
        else return "Obesidad mórbida";
    }
        
        
    private void txtCodigoSucuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoSucuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoSucuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarSucu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCodigoSucu;
    // End of variables declaration//GEN-END:variables
}
